---
import { Image } from "astro:assets";
import IssueSlider from "@components/IssueSlider.astro";
import Layout from "@layouts/Layout.astro";
import Breadcrumbs from "@components/Breadcrumbs.astro";
import { AddToLibrary } from "@components/AddToLibrary/AddToLibrary";
import { elasticGetIssue, elasticGetSeries } from "@util/elastic";
import type { Issue } from "@util/comics.types";
import { getComicIssueDetails } from "@util/comicvine";
import { formatComicvineIssue } from "@util/formatter";

const { id } = Astro.params;
let data;
let issuesInSeries: Issue[] = [];
let isInLibrary = true;
try {
  if (id) {
    data = await elasticGetIssue(id);
    if (data?.series_id) {
      const { result } = await elasticGetSeries(data?.series_id, {
        sort: "desc",
        page: 1,
        size: 10,
      });
      issuesInSeries = result;
    } else {
      console.warn(`No series found for issue ${id}`);
      const comicvineData = await getComicIssueDetails(id);
      if (comicvineData) {
        isInLibrary = false;
        data = formatComicvineIssue(comicvineData);
      }
    }
  }
} catch (error) {
  console.error(error);
}

const title = data
  ? `${data.series_name} #${data.issue_number}`
  : "Issue not found";
---

<Layout title={title}>
  {
    data ? (
      <>
        <Breadcrumbs
          crumbs={[
            { title: "Series", url: "/series" },
            { title: data.series_name, url: `/series/${data.series_id}` },
            { title: `#${data.issue_number}` },
          ]}
        />
        <header>
          <h1 class="mb-2">
            <span class="text-3xl">{data.issue_name ?? data.series_name}</span>
            {!data.issue_name ? (
              <span class="text-2xl">#{data.issue_number}</span>
            ) : (
              ""
            )}
          </h1>
          <div class="flex justify-between items-center flex-wrap mb-4">
            <p class="text-sm">{data.issue_date}</p>
          </div>
        </header>
        {!isInLibrary && (
          <AddToLibrary client:idle seriesId={data.series_id as string} />
        )}
        {
          data.issue_cover ? (
            <Image
              class="mb-4"
              src={data.issue_cover}
              alt={
                data.issue_name ??
                `Cover for ${data.series_name} #${data.issue_number}`
              }
              densities={[1.5, 2]}
              width="421"
              height="640"
              format="avif"
            />
          ) : null /* TODO: Add a fallback image */
        }

        <h2 class="text-xl mt-8 mb-4">Other issues in series</h2>
        <IssueSlider issues={issuesInSeries} />
      </>
    ) : (
      <p>Issue not found</p>
    )
  }
</Layout>
