---
import { Image } from "astro:assets";
import IssueSlider from "@components/IssueSlider.astro";
import Layout from "@layouts/Layout.astro";
import Breadcrumbs from "@components/Breadcrumbs.astro";
import { elasticGetIssue, elasticGetSeries } from "@util/elastic";
import type { Issue } from "@util/comics.types";

const { id } = Astro.params;
let data;
let issuesInSeries: Issue[] = [];
let viewVolume;
try {
  if (id) {
    data = await elasticGetIssue(id);
    if (data?.series_id) {
      const { result } = await elasticGetSeries(data?.series_id, {
        sort: "desc",
        page: 1,
        size: 10,
      });
      issuesInSeries = result;
    }
  }
} catch (error) {
  console.error(error);
}

const title = data
  ? `${data.series_name} #${data.issue_number}`
  : "Issue not found";
---

<Layout title={title}>
  {
    data ? (
      <>
        <Breadcrumbs
          crumbs={[
            { title: "Series", url: "/series" },
            { title: data.series_name, url: `/series/${data.series_id}` },
            { title: `#${data.issue_number}` },
          ]}
        />
        <h2 class="mb-2">
          <a class="text-3xl" href={`/series/${data.series_id}`}>
            {data.series_name}
          </a>
          #{data.issue_number}
        </h2>
        <h2 class="text-xl">{data.issue_name}</h2>
        <p class="mb-4">{data.issue_date}</p>
        <Image
          class="mb-4"
          src={data.issue_cover}
          alt={
            data.issue_name ??
            `Cover for ${data.series_name} #${data.issue_number}`
          }
          densities={[1.5, 2]}
          width="421"
          height="640"
          format="avif"
        />
        <h2 class="text-xl mt-8 mb-4">Other issues in series</h2>
        <IssueSlider issues={issuesInSeries} />
      </>
    ) : (
      <p>Issue not found</p>
    )
  }
</Layout>
