---
import Layout from "../../../layouts/Layout.astro";
import { kvGetVolume } from "../../api/kv";
import type {
  ComicvineIssuesResponse,
  ComicvineVolumeResponse,
} from "../../api/comicvine.types";

const kv = Astro.locals.runtime.env.COMICS;
const { id } = Astro.params;
let volume: ComicvineVolumeResponse;
try {
  if (id) {
    const data = await kvGetVolume(id, kv);
    if (data) {
      volume = data;
    }
  }
} catch (e) {
  console.error(e);
}
---

<Layout title={volume.name}>
  <header class="flex">
    <div class="relative w-28 h-40 mr-4">
      {
        volume.cover_image.map((cover, index) => (
          <img
            class="absolute"
            class:list={
              index === 0
                ? "-rotate-6"
                : index === 1
                  ? "rotate-3"
                  : index === 2
                    ? "rotate-6"
                    : index === 3
                      ? "-rotate-3"
                      : "rotate-0"
            }
            height="160"
            width="105"
            loading={index === 4 ? "eager" : "lazy"}
            src={cover}
            alt={volume.name}
          />
        ))
      }
    </div>
    <div>
      <h1>{volume.name} ({volume.start_year})</h1>
      <p>{volume.count_of_issues} issues</p>
    </div>
  </header>
  <section>
    <ul class="grid gap-4 grid-cols-3 md:grid-cols-6 mt-8">
      {
        volume.issues.map((issue) =>
          issue?.image?.medium_url ? (
            <li>
              <a href={"/comic/" + issue.id}>
                <img
                  src={issue?.image.medium_url}
                  loading="lazy"
                  height="320"
                  width="210"
                  alt={issue.name}
                />
                <span>Issue #{issue.issue_number}</span>
              </a>
            </li>
          ) : null
        )
      }
    </ul>
  </section>
</Layout>
