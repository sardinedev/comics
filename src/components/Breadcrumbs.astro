---
type Crumb = {
  title: string;
  url?: string;
};

const { crumbs } = Astro.props as { crumbs: Crumb[] };
---

<nav class="mb-4" aria-label="Breadcrumb">
  <ol class="flex items-center">
    <li>
      <a href="/" class="text-gray-400 hover:text-gray-500">
        <svg
          class="size-5 shrink-0"
          viewBox="0 0 20 20"
          fill="currentColor"
          aria-hidden="true"
          data-slot="icon"
        >
          <path
            fill-rule="evenodd"
            d="M9.293 2.293a1 1 0 0 1 1.414 0l7 7A1 1 0 0 1 17 11h-1v6a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-6H3a1 1 0 0 1-.707-1.707l7-7Z"
            clip-rule="evenodd"></path>
        </svg>
        <span class="sr-only">Home</span>
      </a>
    </li>
    {
      crumbs.map((crumb) => (
        <li class="flex items-center">
            <svg
              class="size-5 shrink-0 text-gray-400"
              viewBox="0 0 20 20"
              fill="currentColor"
              aria-hidden="true"
              data-slot="icon"
            >
              <path
                fill-rule="evenodd"
                d="M8.22 5.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.75.75 0 0 1-1.06-1.06L11.94 10 8.22 6.28a.75.75 0 0 1 0-1.06Z"
                clip-rule="evenodd"
              />
            </svg>
            {crumb.url ? (
              <a href={crumb.url}>{crumb.title}</a>
            ) : (
              <span>{crumb.title}</span>
            )}
        </li>
      ))
    }
  </ol>
</nav>
