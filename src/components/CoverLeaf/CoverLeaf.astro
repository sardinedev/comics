---
import { Image } from "astro:assets";
import type { ReadingStatus } from "../../util/comics.types";

type IssueCoverLeaf = {
  cover: string;
  id: string;
  number: number;
  status?: string;
  type: "Issue";
  read: boolean;
};

type SeriesCoverLeaf = {
  cover: string;
  id: string;
  name: string;
  type: "series";
  year: string;
  readingStatus: ReadingStatus;
};

const { cover, id, ...props } = Astro.props as IssueCoverLeaf | SeriesCoverLeaf;

let label, alt, href, readingStatus;

if (props.type === "Issue") {
  const { number } = props;
  label = `Issue #${number}`;
  alt = `Cover for issue #${number}`;
  href = `/comic/${id}`;
  readingStatus = props.read ? "read" : "unread";
}
if (props.type === "series") {
  const { name, year } = props;
  alt = `Cover for ${name} (${year})`;
  href = `/series/${id}`;
  readingStatus = props.readingStatus === "read" ? "read" : "unread";
}
---

<li data-coverid={id}>
  <a href={href} class="relative flex flex-col items-center gap-2">
    <Image
      class={"rounded-md w-64"}
      src={cover ?? "/logo.svg"}
      densities={[1.5, 2]}
      height="320"
      width="210"
      alt={alt as string}
      format="avif"
    />
    <span class={"flex items-baseline justify-center gap-2"}>
      {
        props.type === "Issue" ? (
          label
        ) : (
          <>
            <span class="text-xl font-bold text-white sm:text-2xl">
              {props.name}
            </span>
            <span class="text-sm text-gray-300">{props.year}</span>
          </>
        )
      }
    </span>
    {
      readingStatus === "read" ? (
        <img
          class={"h-5 w-5 invert absolute top-1 right-1 shadow-lg"}
          src={"/icons/tick-filled.svg"}
          alt="Previous page"
        />
      ) : null
    }
  </a>
</li>
